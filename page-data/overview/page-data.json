{"componentChunkName":"component---guides-base-src-templates-post-jsx","path":"/overview","result":{"data":{"markdownRemark":{"html":"<p>Building your own analytics engine, like the one behind Google Analytics, sounds like a very sophisticated engineering problem. And it truly is. Back then, it would require years of engineering time to ship such a piece of software. But as data landscape changes, now we have a lot of tools which solve different part of this problem extremely well: data collection, storage, aggregations, and query engine. By breaking the problem into smaller pieces and solving them one-by-one by using existing open-source tools, we will be able to build our own web analytics engine.</p>\n<p>If youâ€™re familiar with Google Analytics (GA), you probably already know that every web page tracked by GA contains a GA tracking code. It loads an async script that assigns a tracking cookie to a user if it isnâ€™t set yet. It also sends an XHR for every user interaction, like a page load. These XHR requests are then processed, and raw event data is stored and scheduled for aggregation processing. Depending on the total amount of incoming requests, the data will also be sampled.</p>\n<p>Even though this is a high-level overview of Google Analytics essentials, itâ€™s enough to reproduce most of the functionality.</p>\n<p>You can check <a href=\"https://web-analytics-demo.cube.dev/\">the demo application here</a> and its <a href=\"https://github.com/cube-js/cube.js/tree/master/examples/web-analytics\">source code is available on Github.</a></p>\n<p><img src=\"https://cube.dev/downloads/media/web-analytics-demo.gif\"></p>\n<h2 id=\"architecture-overview\" style=\"position:relative;\"><a href=\"#architecture-overview\" aria-label=\"architecture overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Architecture overview</h2>\n<p>Below you can see the architecture of the application we are going to build. We'll use Snowplow for data collection, Athena as the main data warehouse, MySQL to store pre-aggregations, and Cube.js as the aggregation and querying engine. The frontend will be built with React, Material UI, and Recharts. Although the schema below shows some AWS services, they can be partially or fully substituted by open-source alternatives: Kafka, MinIO, and PrestoDB instead of Kinesis, S3, and Athena, respectively.</p>\n<p><img src=\"https://raw.githubusercontent.com/cube-js/cube.js/master/examples/web-analytics/web-analytics-schema.png\"></p>\n<p>We'll start with data collection and gradually build the whole application, including the frontend. If you have any questions while going through this guide, please feel free to join this Slack community and post your question there.</p>\n<p>Happy Hacking! ðŸ’»</p>","timeToRead":1,"excerpt":"Building your own analytics engine, like the one behind Google Analytics, sounds like a very sophisticated engineering problem. And it trulyâ€¦","frontmatter":{"title":"Overview"},"fields":{"slug":"/overview"}}},"pageContext":{"config":{"siteTitle":"Building an Open Source Web Analytics Platform","siteTitleShort":"Building an Open Source Web Analytics Platform","siteTitleAlt":"Building an Open Source Web Analytics Platform","siteLogo":"/logos/icon.png","previewImage":"/logos/preview.png","siteUrl":"https://web-analytics.cube.dev","siteDescription":"Learn how to build open source web analytics platform with Cube.js.","googleAnalyticsID":"UA-70480064-3","themeColor":"#c62828","backgroundColor":"#e0e0e0","pathPrefix":"","githubUrl":"https://github.com/cube-js/cube.js/tree/master/examples/web-analytics"},"slug":"/overview","nexttitle":"Data Collection and Storage","nextslug":"/data-collection-and-storage","tableOfContents":[{"node":{"fields":{"slug":"/overview"},"frontmatter":{"title":"Overview","order":1}}},{"node":{"fields":{"slug":"/data-collection-and-storage"},"frontmatter":{"title":"Data Collection and Storage","order":2}}},{"node":{"fields":{"slug":"/analytics-api-with-cube-js"},"frontmatter":{"title":"Analytics API with Cube.js","order":3}}},{"node":{"fields":{"slug":"/frontend-app-with-react-and-material-ui"},"frontmatter":{"title":"Frontend App with React and Material UI","order":4}}},{"node":{"fields":{"slug":"/building-a-dashboard"},"frontmatter":{"title":"Building a Dashboard","order":5}}},{"node":{"fields":{"slug":"/adding-interactivity"},"frontmatter":{"title":"Adding Interactivity","order":6}}},{"node":{"fields":{"slug":"/performance-and-cost-optimization"},"frontmatter":{"title":"Performance and Cost Optimization","order":7}}}]}},"staticQueryHashes":[]}
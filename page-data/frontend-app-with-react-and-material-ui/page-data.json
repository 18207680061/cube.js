{"componentChunkName":"component---guides-base-src-templates-post-jsx","path":"/frontend-app-with-react-and-material-ui","result":{"data":{"markdownRemark":{"html":"<p>We can quickly generate a frontend application with Cube.js Templates. Templates are open-source, ready-to-use frontend analytics apps. We can just pick what technologies we need and it gets everything configured and ready to use. In the Cube.js playground navigate to the Dashboard App and click <em>Create Your Own</em>. We will use React and Material UI and let's pick Recharts as our charting library.</p>\n<p><img src=\"/images/4-screenshot-1.png\"></p>\n<p>It will create the <code class=\"language-text\">dashboard-app</code> folder with the frontend application inside the project folder. It could take several minutes to download and install all the dependencies. Once it is done, you can start Dashboard App either from \"Dashboard App\" tab in the Playground or by running <code class=\"language-text\">npm run start</code> inside the <code class=\"language-text\">dashboard-app</code> folder.</p>\n<p>To keep things simple we're not going to build the <a href=\"https://web-analytics-demo.cube.dev/\">full demo\napplication</a>, but\nfocus on the foundations of working with Cube.js API on the frontend, building the data schema and optimize the queries performance. We're going to build the <a href=\"https://web-analytics-demo.cube.dev/\">Audience Dashboard</a> and you can check <a href=\"https://github.com/cube-js/cube.js/tree/master/examples/web-analytics\">the source code of the rest of application on Github</a>.</p>\n<p>We'll start by building the top over time chart to display page views, users or\nsessions with different time granularity options.</p>\n<p><img src=\"https://cube.dev/downloads/media/web-analytics-guide-gif-1.gif\"></p>\n<h2 id=\"page-views-chart\" style=\"position:relative;\"><a href=\"#page-views-chart\" aria-label=\"page views chart permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Page Views Chart</h2>\n<p>Let's first define the data schema for the page views chart. In our\ndatabase page views are events with the type of <code class=\"language-text\">page_view</code> and platform <code class=\"language-text\">web</code>.\nThe type is stored in column called <code class=\"language-text\">event</code>. Let's create a new file for\n<code class=\"language-text\">PageViews</code> cube.</p>\n<p>Create the <code class=\"language-text\">schema/PageViews.js</code> with the following content.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">cube</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">PageViews</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> Events<span class=\"token punctuation\">,</span>\n  sql<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    SELECT\n      *\n    FROM </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Events<span class=\"token punctuation\">.</span><span class=\"token function\">sql</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> events\n    WHERE events.platform = 'web' AND events.event = 'page_view'\n  </span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We've created a new cube and extended it from existing <code class=\"language-text\">Events</code> cube. This way\n<code class=\"language-text\">PageViews</code> is going to have all the measures and dimensions from <code class=\"language-text\">Events</code> cube,\nbut will select events only with platform <code class=\"language-text\">web</code> and event type <code class=\"language-text\">page_view</code>.\nYou can <a href=\"https://cube.dev/docs/extending-cubes\">learn more about extending cubes here.</a></p>\n<p>You can test out newly created <code class=\"language-text\">PaveViews</code> in the Cube.js Plyground. Navigate to\nthe <em>Build</em> tab in the Playground, select *Page Views Count\" in the measures\ndropdown and you should be able to see the chart with your page views.</p>\n<p><img src=\"/images/4-screenshot-2.png\"></p>\n<p>Let's add this chart to our Dashboard App. First, we'll create the\n<code class=\"language-text\">&lt;OverTimeChart /&gt;</code> component. This component's job is to render the chart as\nwell as the switch buttons to let users change date's granularity between\nhour, day, week, and, month.</p>\n<p>Create the the <code class=\"language-text\">dashbooard-app/src/component/OverTimeChart.js</code> with the\nfollowing content.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Card <span class=\"token keyword\">from</span> <span class=\"token string\">\"@material-ui/core/Card\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> CardContent <span class=\"token keyword\">from</span> <span class=\"token string\">\"@material-ui/core/CardContent\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Typography <span class=\"token keyword\">from</span> <span class=\"token string\">\"@material-ui/core/Typography\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ButtonGroup <span class=\"token keyword\">from</span> <span class=\"token string\">\"@material-ui/core/ButtonGroup\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Button <span class=\"token keyword\">from</span> <span class=\"token string\">\"@material-ui/core/Button\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Grid <span class=\"token keyword\">from</span> <span class=\"token string\">\"@material-ui/core/Grid\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ChartRenderer <span class=\"token keyword\">from</span> <span class=\"token string\">\"./ChartRenderer\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">withGranularity</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> query<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>vizState <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> granularity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>vizState<span class=\"token punctuation\">,</span>\n  query<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>query<span class=\"token punctuation\">,</span>\n    timeDimensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span>query<span class=\"token punctuation\">.</span>timeDimensions<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      granularity<span class=\"token operator\">:</span> granularity\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">OverTimeChart</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> title<span class=\"token punctuation\">,</span> vizState<span class=\"token punctuation\">,</span> granularityControls <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>granularity<span class=\"token punctuation\">,</span> setGranularity<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Card</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CardContent</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Grid</span></span> <span class=\"token attr-name\">container</span> <span class=\"token attr-name\">justify</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>space-between<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Grid</span></span> <span class=\"token attr-name\">item</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Typography</span></span> <span class=\"token attr-name\">component</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>p<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">gutterBottom</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              </span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Typography</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Grid</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Grid</span></span> <span class=\"token attr-name\">item</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ButtonGroup</span></span>\n              <span class=\"token attr-name\">size</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>small<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">aria-label</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>outlined primary button group<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token string\">'hour'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'day'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'week'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'month'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">granOption</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span>\n                  <span class=\"token attr-name\">variant</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>granularity <span class=\"token operator\">===</span> granOption <span class=\"token operator\">?</span> <span class=\"token string\">'contained'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span></span>\n                  <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>granOption<span class=\"token punctuation\">}</span></span>\n                  <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setGranularity</span><span class=\"token punctuation\">(</span>granOption<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n                <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                  </span><span class=\"token punctuation\">{</span>granOption<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">></span></span>\n              <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ButtonGroup</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Grid</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Grid</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ChartRenderer</span></span>\n          <span class=\"token attr-name\">height</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">250</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">vizState</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">withGranularity</span><span class=\"token punctuation\">(</span>vizState<span class=\"token punctuation\">,</span> granularity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">CardContent</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Card</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> OverTimeChart<span class=\"token punctuation\">;</span></code></pre></div>\n<p>We are almost ready to plot the page views chart, but before doing it, let's customize\nour chart rendering a little. This template has created the <code class=\"language-text\">&lt;ChartRenderer /&gt;</code>\ncomponent which uses <a href=\"http://recharts.org/en-US/\">Recharts</a> to render the chart.\nWe're going to change formatting, colors and general appearance of the chart.</p>\n<p>To nicely format numbers and dates values we can use <a href=\"http://numeraljs.com/\">Numeral.js</a> and <a href=\"https://momentjs.com/\">Moment.js</a> packages respectively. Let's install them, run the following command inside the <code class=\"language-text\">dashbooard-app</code> folder.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save numeral moment</code></pre></div>\n<p>Next, make the following changes in the\n<code class=\"language-text\">dashbooard-app/src/components/ChartRenderer.js</code> file.</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\"><span class=\"token unchanged\"> import TableCell from \"@material-ui/core/TableCell\";\n import TableHead from \"@material-ui/core/TableHead\";\n import TableRow from \"@material-ui/core/TableRow\";\n</span><span class=\"token inserted-sign inserted\">+import moment from \"moment\";\n+import numeral from \"numeral\";\n+const dateFormatter = item => moment(item).format(\"MMM DD\");\n+const numberFormatter = item => numeral(item).format(\"0,0\");\n</span>\n<span class=\"token unchanged\"> const CartesianChart = ({ resultSet, children, ChartComponent }) => (\n   &lt;ResponsiveContainer width=\"100%\" height={350}>\n</span><span class=\"token deleted-sign deleted\">-    &lt;ChartComponent data={resultSet.chartPivot()}>\n-      &lt;XAxis dataKey=\"x\" />\n-      &lt;YAxis />\n-      &lt;CartesianGrid />\n</span><span class=\"token inserted-sign inserted\">+    &lt;ChartComponent\n+      margin={{\n+            top: 16,\n+            right: 16,\n+            bottom: 0,\n+            left: 0,\n+          }}\n+       data={resultSet.chartPivot()}\n+     >\n+      &lt;XAxis dataKey=\"x\" axisLine={false} tickLine={false} tickFormatter={dateFormatter} />\n+      &lt;YAxis axisLine={false} tickLine={false} />\n+      &lt;CartesianGrid vertical={false} />\n</span><span class=\"token unchanged\">       {children}\n       &lt;Legend />\n</span><span class=\"token deleted-sign deleted\">-      &lt;Tooltip />\n</span><span class=\"token inserted-sign inserted\">+      &lt;Tooltip labelFormatter={dateFormatter} formatter={numberFormatter} />\n</span><span class=\"token unchanged\">     &lt;/ChartComponent>\n   &lt;/ResponsiveContainer>\n );\n</span>\n<span class=\"token deleted-sign deleted\">-const colors = [\"#FF6492\", \"#141446\", \"#7A77FF\"];\n</span><span class=\"token inserted-sign inserted\">+const colors = [\"#4791db\", \"#e33371\", \"#e57373\"];</span></code></pre></div>\n<p>The code above uses Moment.js and Numeral.js to define formatter for axes and\ntooltip, passes some additional properties to Recharts components and changes the\ncolors of the chart. With this approach you can fully customize your charts'\nlook and feel to fit your application's design.</p>\n<p>Now, we are ready to plot our page views chart. The template generated the\n<code class=\"language-text\">&lt;DashboardPage /&gt;</code> component which is an entry point of our frontend application. We're\ngoing to render all our dashboard inside this component.</p>\n<p>Replace the content of the <code class=\"language-text\">dashboard-app/src/pages/DashboardPage.js</code> with the\nfollowing.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> makeStyles <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@material-ui/core/styles\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Grid <span class=\"token keyword\">from</span> <span class=\"token string\">\"@material-ui/core/Grid\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> OverTimeChart <span class=\"token keyword\">from</span> <span class=\"token string\">\"../components/OverTimeChart\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> useStyles <span class=\"token operator\">=</span> <span class=\"token function\">makeStyles</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">theme</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  root<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    padding<span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span><span class=\"token function\">spacing</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">DashboardPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> classes <span class=\"token operator\">=</span> <span class=\"token function\">useStyles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Grid</span></span> <span class=\"token attr-name\">item</span> <span class=\"token attr-name\">xs</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">12</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>classes<span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      &lt;OverTimeChart\n        vizState=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n          chartType<span class=\"token operator\">:</span> <span class=\"token string\">'line'</span><span class=\"token punctuation\">,</span>\n          query<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            measures<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Sessions.count\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            timeDimensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n              dimension<span class=\"token operator\">:</span> <span class=\"token string\">\"Sessions.timestamp\"</span><span class=\"token punctuation\">,</span>\n              granularity<span class=\"token operator\">:</span> <span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span>\n              dateRange<span class=\"token operator\">:</span> <span class=\"token string\">\"Last 30 days\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      />\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Grid</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> DashboardPage<span class=\"token punctuation\">;</span></code></pre></div>\n<p>The code above is pretty straightforward - we're using our newly created\n<code class=\"language-text\">&lt;OverTimeChart /&gt;</code> to render the page views chart by passing the <a href=\"https://cube.dev/docs/query-format\">Cube.js JSON\nQuery</a> inside the <code class=\"language-text\">vizState</code> prop.</p>\n<p>Navigate to the <a href=\"http://localhost:3000\">http://localhost:3000</a> in your browser and you should be able to see\nthe chart like the one below.</p>\n<p><img src=\"/images/4-screenshot-3.png\"></p>\n<h2 id=\"adding-sessions-and-users-charts\" style=\"position:relative;\"><a href=\"#adding-sessions-and-users-charts\" aria-label=\"adding sessions and users charts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adding Sessions and Users Charts</h2>\n<p>Next, let's build sessions chart. A session is defined as a group of interactions one user takes within a given time frame on your app. Usually that time frame defaults to 30 minutes, meaning that whatever a user does on your app (e.g. browses pages, downloads resources, purchases products) before they leave equals one session.</p>\n<p>As you probably noticed before we're using the ROW_NUMBER window function in our\nEvents cube definition to calculate the index of the event in the session.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">ROW_NUMBER<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">PARTITION</span> <span class=\"token keyword\">BY</span> domain_sessionid <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> derived_tstamp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> event_in_session_index</code></pre></div>\n<p>We can use this index to aggregate our events into sessions. We rely here on the <code class=\"language-text\">domain_sessionid</code> set by Snowplow tracker, but you can also implement your own sessionization with Cube.js to have more control over how you want to define sessions or in case you have multiple trackers and you can not rely on the client-side sessionization. You can check <a href=\"https://cube.dev/docs/event-analytics\">this tutorial for sessionization with Cube.js</a>.</p>\n<p>Let's create <code class=\"language-text\">Sessions</code> cube in <code class=\"language-text\">schema/Sessions.js</code> file.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">cube</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Sessions</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  sql<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n   SELECT\n    *\n   FROM </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Events<span class=\"token punctuation\">.</span><span class=\"token function\">sql</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> AS e\n   WHERE e.event_in_session_index = 1\n  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n  measures<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    count<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">count</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  dimensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    timestamp<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">time</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      sql<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">derived_tstamp</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    id<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      sql<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">domain_sessionid</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">string</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      primaryKey<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We'll use <code class=\"language-text\">Sessions.count</code> measure to plot the sessions on our over time chart.\nTo plot users we need to add one more measure to the <code class=\"language-text\">Sessions</code> cube.</p>\n<p>Snowplow tracker assigns user ID by using 1st party cookie. We can find this\nuser ID in <code class=\"language-text\">domain_userid</code> column. To plot users chart we're going to use the existing <code class=\"language-text\">Sessions</code> cube, but we will count not all the sessions, but only unique by <code class=\"language-text\">domain_userid</code>.</p>\n<p>Add the following measure to the <code class=\"language-text\">Sessions</code> cube.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">usersCount<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">countDistinct</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  sql<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">domain_userid</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now, let's add the dropdown to our chart to let\nusers select what they want to plot: page views, sessions, or users.</p>\n<p>First, let's create a simple <code class=\"language-text\">&lt;DropDown /&gt;</code> component. Create the <code class=\"language-text\">dashboard-app/src/components/Dropdown.js</code> file with the following content.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Button <span class=\"token keyword\">from</span> <span class=\"token string\">'@material-ui/core/Button'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Menu <span class=\"token keyword\">from</span> <span class=\"token string\">'@material-ui/core/Menu'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> MenuItem <span class=\"token keyword\">from</span> <span class=\"token string\">'@material-ui/core/MenuItem'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ExpandMoreIcon <span class=\"token keyword\">from</span> <span class=\"token string\">'@material-ui/icons/ExpandMore'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Dropdown</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">,</span> options <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>anchorEl<span class=\"token punctuation\">,</span> setAnchorEl<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> open <span class=\"token operator\">=</span> <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>anchorEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleClose</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setAnchorEl</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    callback <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span>\n        <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>inherit<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">aria-haspopup</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> currentTarget <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setAnchorEl</span><span class=\"token punctuation\">(</span>currentTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span> value <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ExpandMoreIcon</span></span> <span class=\"token attr-name\">fontSize</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>small<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Menu</span></span>\n        <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>long-menu<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">anchorEl</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>anchorEl<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">keepMounted</span>\n        <span class=\"token attr-name\">open</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>open<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onClose</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">handleClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">option</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MenuItem</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>option<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">handleClose</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">[</span>option<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token punctuation\">{</span>option<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MenuItem</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Menu</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now, let's use it on our dashboard page alongside adding new charts for\nusers to select from.\nMake the following changes in the <code class=\"language-text\">dashboard-app/src/pages/DashboardPage.js</code>\nfile.</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\"><span class=\"token deleted-sign deleted\">-import React from \"react\";\n</span><span class=\"token inserted-sign inserted\">+import React, { useState } from \"react\";\n</span><span class=\"token unchanged\"> import { makeStyles } from \"@material-ui/core/styles\";\n import Grid from \"@material-ui/core/Grid\";\n import OverTimeChart from \"../components/OverTimeChart\";\n</span><span class=\"token inserted-sign inserted\">+import Dropdown from \"../components/Dropdown\";\n</span>\nconst useStyles = makeStyles(theme => ({\n<span class=\"token unchanged\">  root: {\n    padding: theme.spacing(3),\n  }\n</span>}));\n\n<span class=\"token inserted-sign inserted\">+const overTimeQueries = {\n+  \"Users\": {\n+    measures: [\"Sessions.usersCount\"],\n+    timeDimensions: [{\n+      dimension: \"Sessions.timestamp\",\n+      granularity: \"day\",\n+      dateRange: \"Last 30 days\"\n+    }]\n+  },\n+  \"Sessions\": {\n+    measures: [\"Sessions.count\"],\n+    timeDimensions: [{\n+      dimension: \"Sessions.timestamp\",\n+      granularity: \"day\",\n+      dateRange: \"Last 30 days\"\n+    }]\n+  },\n+  \"Page Views\": {\n+    measures: [\"PageViews.count\"],\n+    timeDimensions: [{\n+      dimension: \"PageViews.timestamp\",\n+      granularity: \"day\",\n+      dateRange: \"Last 30 days\"\n+    }]\n+  },\n+};\n+\n</span><span class=\"token unchanged\"> const DashboardPage = () => {\n   const classes = useStyles();\n</span><span class=\"token inserted-sign inserted\">+  const [overTimeQuery, setOverTimeQuery] = useState(\"Users\");\n</span><span class=\"token unchanged\">   return (\n     &lt;Grid item xs={12} className={classes.root}>\n       &lt;OverTimeChart\n</span><span class=\"token inserted-sign inserted\">+        title={\n+          &lt;Dropdown\n+            value={overTimeQuery}\n+            options={\n+              Object.keys(overTimeQueries).reduce((out, measure) => {\n+                out[measure] = () => setOverTimeQuery(measure)\n+                return out;\n+              }, {})\n+            }\n+          />\n+        }\n</span><span class=\"token unchanged\">         vizState={{\n           chartType: 'line',\n</span><span class=\"token deleted-sign deleted\">-          query: {\n-            measures: [\"Sessions.count\"],\n-            timeDimensions: [{\n-              dimension: \"Sessions.timestamp\",\n-              granularity: \"day\",\n-              dateRange: \"Last 30 days\"\n-            }]\n-          }\n</span><span class=\"token inserted-sign inserted\">+          query: overTimeQueries[overTimeQuery]\n</span><span class=\"token unchanged\">         }}\n       />\n     &lt;/Grid>\n  )\n</span>};\n\nexport default DashboardPage;</code></pre></div>\n<p>Navigate to the <a href=\"http://localhost:3000\">http://localhost:3000</a> and you should be able to switch between charts and change the granularity like on the GIF below.</p>\n<p><img src=\"https://cube.dev/downloads/media/web-analytics-guide-gif-1.gif\"></p>\n<p>In the next part we'll add more new charts to this dashboard!📊🎉</p>","timeToRead":9,"excerpt":"We can quickly generate a frontend application with Cube.js Templates. Templates are open-source, ready-to-use frontend analytics apps. We…","frontmatter":{"title":"Frontend App with React and Material UI"},"fields":{"slug":"/frontend-app-with-react-and-material-ui"}}},"pageContext":{"config":{"siteTitle":"Building an Open Source Web Analytics Platform","siteTitleShort":"Building an Open Source Web Analytics Platform","siteTitleAlt":"Building an Open Source Web Analytics Platform","siteLogo":"/logos/icon.png","previewImage":"/logos/preview.png","siteUrl":"https://web-analytics.cube.dev","siteDescription":"Learn how to build open source web analytics platform with Cube.js.","googleAnalyticsID":"UA-70480064-3","themeColor":"#c62828","backgroundColor":"#e0e0e0","pathPrefix":"","githubUrl":"https://github.com/cube-js/cube.js/tree/master/examples/web-analytics"},"slug":"/frontend-app-with-react-and-material-ui","nexttitle":"Building a Dashboard","nextslug":"/building-a-dashboard","prevtitle":"Analytics API with Cube.js","prevslug":"/analytics-api-with-cube-js","tableOfContents":[{"node":{"fields":{"slug":"/overview"},"frontmatter":{"title":"Overview","order":1}}},{"node":{"fields":{"slug":"/data-collection-and-storage"},"frontmatter":{"title":"Data Collection and Storage","order":2}}},{"node":{"fields":{"slug":"/analytics-api-with-cube-js"},"frontmatter":{"title":"Analytics API with Cube.js","order":3}}},{"node":{"fields":{"slug":"/frontend-app-with-react-and-material-ui"},"frontmatter":{"title":"Frontend App with React and Material UI","order":4}}},{"node":{"fields":{"slug":"/building-a-dashboard"},"frontmatter":{"title":"Building a Dashboard","order":5}}},{"node":{"fields":{"slug":"/adding-interactivity"},"frontmatter":{"title":"Adding Interactivity","order":6}}},{"node":{"fields":{"slug":"/performance-and-cost-optimization"},"frontmatter":{"title":"Performance and Cost Optimization","order":7}}}]}},"staticQueryHashes":[]}
{"componentChunkName":"component---guides-base-src-templates-post-jsx","path":"/building-a-dashboard","result":{"data":{"markdownRemark":{"html":"<p>In the previous part we've created our basic data schema and built first few charts. In\nthis part we'll add more measures and dimensions to our data schema and build new charts on the dashboard.</p>\n<p>We are going to add several KPI charts and one pie chart to our dashboard, like\non the schreenshot below.</p>\n<p>Let's first create <code class=\"language-text\">&lt;Chart /&gt;</code> component, which we're going to use to render\nthe KPI and Pie charts.</p>\n<p>Create the <code class=\"language-text\">dashboard-app/src/components/Chart.js</code> file with the following\ncontent.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Card <span class=\"token keyword\">from</span> <span class=\"token string\">\"@material-ui/core/Card\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> CardContent <span class=\"token keyword\">from</span> <span class=\"token string\">\"@material-ui/core/CardContent\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Typography <span class=\"token keyword\">from</span> <span class=\"token string\">\"@material-ui/core/Typography\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> ChartRenderer <span class=\"token keyword\">from</span> <span class=\"token string\">\"./ChartRenderer\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Chart</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> title<span class=\"token punctuation\">,</span> vizState <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Card</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CardContent</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Typography</span></span> <span class=\"token attr-name\">component</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>p<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">gutterBottom</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Typography</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ChartRenderer</span></span> <span class=\"token attr-name\">vizState</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>vizState<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">CardContent</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Card</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Chart<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Let's use this <code class=\"language-text\">&lt;Chart /&gt;</code> component to render couple KPI charts for measures we already\nhave in the data schema: Users and Sessions.</p>\n<p>Make the following changes to the <code class=\"language-text\">dashboard-app/src/components/DashboardPage.js</code> file.</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\">@@ -3,6 +3,7 @@ import { makeStyles } from \"@material-ui/core/styles\";\n<span class=\"token unchanged\"> import Grid from \"@material-ui/core/Grid\";\n import OverTimeChart from \"../components/OverTimeChart\";\n import Dropdown from \"../components/Dropdown\";\n</span><span class=\"token inserted-sign inserted\">+import Chart from \"../components/Chart\";\n</span>\n<span class=\"token unchanged\"> const useStyles = makeStyles(theme => ({\n   root: {\n</span>@@ -37,30 +38,65 @@ const overTimeQueries = {\n<span class=\"token unchanged\">   },\n };\n</span>\n<span class=\"token inserted-sign inserted\">+const queries = {\n+  users: {\n+    chartType: 'number',\n+    query: {\n+      measures: ['Sessions.usersCount'],\n+      timeDimensions: [{\n+        dimension: 'Sessions.timestamp',\n+        dateRange: \"Last 30 days\"\n+      }]\n+    }\n+  },\n+  sessions: {\n+    chartType: 'number',\n+    query: {\n+      measures: ['Sessions.count'],\n+      timeDimensions: [{\n+        dimension: 'Sessions.timestamp',\n+        dateRange: \"Last 30 days\"\n+      }]\n+    }\n+  },\n+}\n+\n</span><span class=\"token unchanged\"> const DashboardPage = () => {\n   const classes = useStyles();\n   const [overTimeQuery, setOverTimeQuery] = useState(\"Users\");\n   return (\n</span><span class=\"token deleted-sign deleted\">-    &lt;Grid item xs={12} className={classes.root}>\n-      &lt;OverTimeChart\n-        title={\n-          &lt;Dropdown\n-            value={overTimeQuery}\n-            options={\n-              Object.keys(overTimeQueries).reduce((out, measure) => {\n-                out[measure] = () => setOverTimeQuery(measure)\n-                return out;\n-              }, {})\n-            }\n-          />\n-        }\n-        vizState={{\n-          chartType: 'line',\n-          query: overTimeQueries[overTimeQuery]\n-        }}\n-      />\n</span><span class=\"token inserted-sign inserted\">+    &lt;Grid container spacing={3}  className={classes.root}>\n+      &lt;Grid item xs={12}>\n+        &lt;OverTimeChart\n+          title={\n+            &lt;Dropdown\n+              value={overTimeQuery}\n+              options={\n+                Object.keys(overTimeQueries).reduce((out, measure) => {\n+                  out[measure] = () => setOverTimeQuery(measure)\n+                  return out;\n+                }, {})\n+              }\n+            />\n+          }\n+          vizState={{\n+            chartType: 'line',\n+            query: overTimeQueries[overTimeQuery]\n+          }}\n+        />\n+      &lt;/Grid>\n+      &lt;Grid item xs={6}>\n+        &lt;Grid container spacing={3}>\n+          &lt;Grid item xs={6}>\n+            &lt;Chart title=\"Users\" vizState={queries.users} />\n+          &lt;/Grid>\n+          &lt;Grid item xs={6}>\n+            &lt;Chart title=\"Sessions\" vizState={queries.sessions} />\n+          &lt;/Grid>\n+        &lt;/Grid>\n+      &lt;/Grid>\n</span><span class=\"token unchanged\">     &lt;/Grid>\n   )\n };\n</span>\nexport default DashboardPage;</code></pre></div>\n<p>Refresh the dashboard after making the above changes and you should see something\nlike on the screenshot below.</p>\n<p><img src=\"/images/5-screenshot-1.png\"></p>\n<p>To add more charts on the dashboard, we first need to define new measures and\ndimensions in our data schema.</p>\n<h2 id=\"new-measures-and-dimensions-in-data-schema\" style=\"position:relative;\"><a href=\"#new-measures-and-dimensions-in-data-schema\" aria-label=\"new measures and dimensions in data schema permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>New Measures and Dimensions in Data Schema</h2>\n<p>In the previous part we've already built the foundation for our data schema and\ncovered some topics like sessionization. Now, we're going to add new measures on\ntop of the cubes we've created earlier.</p>\n<p>Feel free to use Cube.js Playground to test new measures and dimensions as we\nadding them. We'll update our dashboard with all newly created metrics in the\nend of this part.</p>\n<h3 id=\"returning-vs-news-users\" style=\"position:relative;\"><a href=\"#returning-vs-news-users\" aria-label=\"returning vs news users permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Returning vs News Users</h3>\n<p>Let's add a way to figure out whether users are new or returning. To\ndistinguish <strong>New</strong> users from <strong>Returning</strong> we're going to use session's index\nset by Snowplow tracker - <code class=\"language-text\">domain_sessionidx</code>.</p>\n<p>First, create a new <code class=\"language-text\">type</code> dimension in the <code class=\"language-text\">Sessions</code> cube. We're using\n<a href=\"https://cube.dev/docs/dimensions#parameters-case\">case property</a> to make this dimension return either <code class=\"language-text\">New</code> or <code class=\"language-text\">Returning</code> based on the\nvalue of <code class=\"language-text\">domain_sessionidx</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">type<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">string</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">case</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    when<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> sql<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">CUBE</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.domain_sessionidx = 1</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">New</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">else</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> label<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Returning</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  title<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">User Type</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, let's create a new measure to count only for \"New Users\". We're going to define <code class=\"language-text\">newUsersCount</code> measure by using <a href=\"https://cube.dev/docs/measures#parameters-filters\">filters\nproperty</a> to select\nonly <strong>new</strong> sessions.</p>\n<p>Add the following measure to the <code class=\"language-text\">Sessions</code> cube.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">newUsersCount<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">countDistinct</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  sql<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">domain_userid</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  filters<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> sql<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>type<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> = 'New'</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  title<span class=\"token operator\">:</span> <span class=\"token string\">\"New Users\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We'll use <code class=\"language-text\">type</code> dimension to build \"New vs Returning\" pie chart. And <code class=\"language-text\">newUsersCount</code> measure for \"New Users\" KPI chart. Feel free to test these measure and dimension in the Playground meanwhile.</p>\n<h3 id=\"average-number-of-events-per-session\" style=\"position:relative;\"><a href=\"#average-number-of-events-per-session\" aria-label=\"average number of events per session permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Average Number of Events per Session</h3>\n<p>To calculate the average we need to have the number of events per session first. We can achieve that by creating a <a href=\"https://cube.dev/docs/subquery#top\">subQuery dimension</a>. Subquery dimensions are used to reference measures from other cubes inside a dimension.</p>\n<p>To make subQuery work we need to define a relationship between <code class=\"language-text\">Events</code> and <code class=\"language-text\">Sessions</code> cubes. Since, every event belongs to some session, we're going to define <code class=\"language-text\">belongsTo</code> join. You can <a href=\"https://cube.dev/docs/joins#top\">learn more about joins in Cube.js here</a>.</p>\n<p>Add the following block to the <code class=\"language-text\">Events</code> cube.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">joins<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  Sessions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    relationship<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">belongsTo</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    sql<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">CUBE</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.domain_sessionid = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Sessions<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We'll calculate count of events, which we already have as a measure in the <code class=\"language-text\">Events</code> cube, as a dimension in the Sessions cube.</p>\n<p>Once, we have this dimension we can easily calculate its average as a measure.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Add the following dimension to the Sessions cube</span>\neventsCount<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">number</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  sql<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Events<span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  subQuery<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Add the following measure to the Sessions cube</span>\navgEvents<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">number</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  sql<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">round(avg(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>eventsCount<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">))</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"average-session-durarion\" style=\"position:relative;\"><a href=\"#average-session-durarion\" aria-label=\"average session durarion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Average Session Durarion</h3>\n<p>To calculate the average session duration we need first calculate the\nduration of sessions as a dimension and then take the average of this dimension as a\nmeasure.</p>\n<p>To get the duration of the session we need to know when it\nstarts and when it ends. We already have the start time, which is our <code class=\"language-text\">time</code>\ndimension. To get the <code class=\"language-text\">sessionEnd</code> we need to find the timestamp of the last\nevent in the session. we'll take the same approach here with the subQuery dimension as we did for number of events per session.</p>\n<p>First, create the following measure in the <code class=\"language-text\">Events</code> cube.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">maxTimestamp<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">max</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  sql<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">derived_tstamp</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, create the subQuery dimension to find the last max timestamp for the\nsession. Add the following dimension to the <code class=\"language-text\">Sessions</code> cube.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">sessionEnd<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">time</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  sql<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Events<span class=\"token punctuation\">.</span>maxTimestamp<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  subQuery<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now, we have everything to calculate the duration of the session. Add the\n<code class=\"language-text\">durationSeconds</code> dimension to the <code class=\"language-text\">Sessions</code> cube.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">durationSeconds<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  sql<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">date_diff('second', </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>timestamp<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>sessionEnd<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  type<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">number</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The last step is to define the <code class=\"language-text\">averageDurationSeconds</code> measure in the\n<code class=\"language-text\">Sessions</code> cube.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">averageDurationSeconds<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">avg</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  sql<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>durationSeconds<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  meta<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    format<span class=\"token operator\">:</span> <span class=\"token string\">'time'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the above definition we're also using measure's <a href=\"https://cube.dev/docs/measures#parameters-meta\">meta\nproperty</a>. Cube.js has <a href=\"https://cube.dev/docs/types-and-formats#measures-formats\">several built-in measure\nformats</a> like\n<code class=\"language-text\">currency</code> or <code class=\"language-text\">percent</code>, but it doesn't have <code class=\"language-text\">time</code> format. In this case we can use\n<code class=\"language-text\">meta</code> property to pass this information to the frontend to format it properly.</p>\n<h3 id=\"bounce-rate\" style=\"position:relative;\"><a href=\"#bounce-rate\" aria-label=\"bounce rate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bounce Rate</h3>\n<p>The last metric for today is the <strong>Bounce Rate</strong>.</p>\n<p>A bounced session is usually defined as a session with only one event. Since we’ve already defined the number of events per session, we can easily add a dimension <code class=\"language-text\">isBounced</code> to identify bounced sessions to the <code class=\"language-text\">Sessions</code> cube. Using this dimension, we can add two measures to the <code class=\"language-text\">Sessions</code> cube as well - a count of bounced sessions and a bounce rate.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Add the following dimension to the Sessions cube</span>\nisBounced<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n type<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">string</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">case</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    when<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span> sql<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>eventsCount<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> = 1</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">True</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">else</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> label<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">False</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Add the following measures to the Sessuins cube</span>\nbouncedCount<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">count</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  filters<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n    sql<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>isBounced<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> = 'True'</span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\nbounceRate<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  sql<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">100.00 * </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>bouncedCount<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> / NULLIF(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, 0)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  type<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">number</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  format<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">percent</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"adding-new-charts-to-the-dahsboard\" style=\"position:relative;\"><a href=\"#adding-new-charts-to-the-dahsboard\" aria-label=\"adding new charts to the dahsboard permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adding New Charts to the Dahsboard</h2>\n<p>Now, we can use these new measures and dimensions to add more charts to our\ndashboard. But before doing it, let's make some changes on how we render the KPI\nchart. We want to format the value differently depending on the format of the\nmeasure - whether it is number,\npercent or time.</p>\n<p>Make the following changes to the <code class=\"language-text\">dashboard-app/src/components/ChartRenderer.js</code> file.</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\"><span class=\"token deleted-sign deleted\">-  number: ({ resultSet }) => (\n-    &lt;Typography\n-      variant=\"h4\"\n-      style={{\n-        textAlign: \"center\"\n-      }}\n-    >\n-      {resultSet.seriesNames().map(s => resultSet.totalRow()[s.key])}\n-    &lt;/Typography>\n-  ),\n</span><span class=\"token inserted-sign inserted\">+  number: ({ resultSet }) => {\n+    const measureKey = resultSet.seriesNames()[0].key;\n+    const annotations = resultSet.tableColumns().find(tableColumn => tableColumn.key === measureKey)\n+    const format = annotations.format || (annotations.meta &amp;&amp; annotations.meta.format);\n+    const value = resultSet.totalRow()[measureKey];\n+    let formattedValue;\n+    const percentFormatter = item => numeral(item/100.0).format('0.00%');\n+    const timeNumberFormatter = item => numeral(item).format('00:00:00');\n+    if (format === 'percent') {\n+      formattedValue = percentFormatter(value);\n+    } else if (format === 'time') {\n+      formattedValue = timeNumberFormatter(value);\n+    } else {\n+      formattedValue = numberFormatter(value);\n+    }\n+    return (&lt;Typography variant=\"h4\" > {formattedValue} &lt;/Typography>)\n+  },</span></code></pre></div>\n<p>Finally, we can make a simple change to the <code class=\"language-text\">&lt;DashboardPage /&gt;</code> component. All\nwe need to do is to update the list of queries and chart items on the dashboard\nwith new metrics: New Users, Average Events per Sessions, Average Sessions\nDuration, Bounce Rate and the breakdown of Users by Type.</p>\n<p>Make the following changes to the <code class=\"language-text\">dashboard-app/src/pages/DashboardPage.js</code> file.</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\">@@ -58,6 +58,57 @@ const queries = {\n<span class=\"token unchanged\">         dateRange: \"Last 30 days\"\n       }]\n     }\n</span><span class=\"token inserted-sign inserted\">+  },\n+  newUsers: {\n+    chartType: 'number',\n+    query: {\n+      measures: ['Sessions.newUsersCount'],\n+      timeDimensions: [{\n+        dimension: 'Sessions.timestamp',\n+        dateRange: \"Last 30 days\"\n+      }]\n+    }\n+  },\n+  avgEvents: {\n+    chartType: 'number',\n+    query: {\n+      measures: ['Sessions.avgEvents'],\n+      timeDimensions: [{\n+        dimension: 'Sessions.timestamp',\n+        dateRange: \"Last 30 days\"\n+      }]\n+    }\n+  },\n+  avgSessionDuration: {\n+    chartType: 'number',\n+    query: {\n+      measures: ['Sessions.averageDurationSeconds'],\n+      timeDimensions: [{\n+        dimension: 'Sessions.timestamp',\n+        dateRange: \"Last 30 days\"\n+      }]\n+    }\n+  },\n+  bounceRate: {\n+    chartType: 'number',\n+    query: {\n+      measures: ['Sessions.bounceRate'],\n+      timeDimensions: [{\n+        dimension: 'Sessions.timestamp',\n+        dateRange: \"Last 30 days\"\n+      }]\n+    }\n+  },\n+  usersByType: {\n+    chartType: 'pie',\n+    query: {\n+      measures: ['Sessions.usersCount'],\n+      dimensions: ['Sessions.type'],\n+      timeDimensions: [{\n+        dimension: 'Sessions.timestamp',\n+        dateRange: \"Last 30 days\"\n+      }]\n+    }\n</span><span class=\"token unchanged\">   }\n }\n</span>\n@@ -93,8 +144,26 @@ const DashboardPage = () => {\n<span class=\"token unchanged\">           &lt;Grid item xs={6}>\n             &lt;Chart title=\"Sessions\" vizState={queries.sessions} />\n           &lt;/Grid>\n</span><span class=\"token inserted-sign inserted\">+          &lt;Grid item xs={6}>\n+            &lt;Chart title=\"New Users\" vizState={queries.newUsers} />\n+          &lt;/Grid>\n+          &lt;Grid item xs={6}>\n+            &lt;Chart title=\"Avg. Events per Session\" vizState={queries.avgEvents} />\n+          &lt;/Grid>\n+          &lt;Grid item xs={6}>\n+            &lt;Chart title=\"Avg. Session Duration\" vizState={queries.avgSessionDuration} />\n+          &lt;/Grid>\n+          &lt;Grid item xs={6}>\n+            &lt;Chart title=\"Bounce Rate\" vizState={queries.bounceRate} />\n+          &lt;/Grid>\n</span><span class=\"token unchanged\">         &lt;/Grid>\n       &lt;/Grid>\n</span><span class=\"token inserted-sign inserted\">+      &lt;Grid item xs={6}>\n+        &lt;Chart\n+          title=\"Users by Type\"\n+          vizState={queries.usersByType}\n+        />\n+      &lt;/Grid>\n</span><span class=\"token unchanged\">     &lt;/Grid>\n   )\n };</span></code></pre></div>\n<p>That's it for this chapter. We have added 7 more new charts to our dashboard.\nIf you navigate to the <a href=\"http://localhost:3000\">http://localhost:3000</a> you should see the dashboard with all these charts like on the screenshot below.</p>\n<p><img src=\"/images/5-screenshot-2.png\"></p>\n<p>In the next part, we'll add some filters to our dashboard to make it more\ninteractive and let users slice and filter the data.</p>","timeToRead":9,"excerpt":"In the previous part we've created our basic data schema and built first few charts. In\nthis part we'll add more measures and dimensions to…","frontmatter":{"title":"Building a Dashboard"},"fields":{"slug":"/building-a-dashboard"}}},"pageContext":{"config":{"siteTitle":"Building an Open Source Web Analytics Platform","siteTitleShort":"Building an Open Source Web Analytics Platform","siteTitleAlt":"Building an Open Source Web Analytics Platform","siteLogo":"/logos/icon.png","previewImage":"/logos/preview.png","siteUrl":"https://web-analytics.cube.dev","siteDescription":"Learn how to build open source web analytics platform with Cube.js.","googleAnalyticsID":"UA-70480064-3","themeColor":"#c62828","backgroundColor":"#e0e0e0","pathPrefix":"","githubUrl":"https://github.com/cube-js/cube.js/tree/master/examples/web-analytics"},"slug":"/building-a-dashboard","nexttitle":"Adding Interactivity","nextslug":"/adding-interactivity","prevtitle":"Frontend App with React and Material UI","prevslug":"/frontend-app-with-react-and-material-ui","tableOfContents":[{"node":{"fields":{"slug":"/overview"},"frontmatter":{"title":"Overview","order":1}}},{"node":{"fields":{"slug":"/data-collection-and-storage"},"frontmatter":{"title":"Data Collection and Storage","order":2}}},{"node":{"fields":{"slug":"/analytics-api-with-cube-js"},"frontmatter":{"title":"Analytics API with Cube.js","order":3}}},{"node":{"fields":{"slug":"/frontend-app-with-react-and-material-ui"},"frontmatter":{"title":"Frontend App with React and Material UI","order":4}}},{"node":{"fields":{"slug":"/building-a-dashboard"},"frontmatter":{"title":"Building a Dashboard","order":5}}},{"node":{"fields":{"slug":"/adding-interactivity"},"frontmatter":{"title":"Adding Interactivity","order":6}}},{"node":{"fields":{"slug":"/performance-and-cost-optimization"},"frontmatter":{"title":"Performance and Cost Optimization","order":7}}}]}},"staticQueryHashes":[]}